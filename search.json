[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement .github/. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to newdata","title":"Contributing to newdata","text":"outlines propose change newdata.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to newdata","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to newdata","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to newdata","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Begin commit merge messages - indicate user facing changes included NEWS.md. use fledge automatically generate NEWS.md file.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to newdata","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to newdata","text":"Please note newdata project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Poisson Consulting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with newdata","title":"Getting help with newdata","text":"Thanks using newdata! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"/SUPPORT.html","id":"make-sure-its-new","dir":"","previous_headings":"","what":"Make sure its new","title":"Getting help with newdata","text":"opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with newdata","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Thorley. Author, maintainer. Poisson Consulting. Funder, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorley J (2023). newdata: Generate New Data Values, Sequences Frames. https://poissonconsulting.github.io/newdata, https://github.com/poissonconsulting/newdata.","code":"@Manual{,   title = {newdata: Generate New Data Values, Sequences and Frames},   author = {Joe Thorley},   year = {2023},   note = {https://poissonconsulting.github.io/newdata, https://github.com/poissonconsulting/newdata}, }"},{"path":[]},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Generate New Data Values, Sequences and Frames","text":"newdata R package generate new data frames passing predict functions. new data column(s) interest vary across range remaining columns held constant reference value. information see new_data().","code":""},{"path":"/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Generate New Data Values, Sequences and Frames","text":"","code":"library(ggplot2) library(newdata)  mtcars <- datasets::mtcars  model <- lm(mpg ~ wt + hp + poly(disp, 2), data = mtcars)  # generate a data frame across range of disp with other predictor # variables held constant disp <- new_data(mtcars, \"disp\") head(disp) #> # A tibble: 6 × 11 #>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  20.1  6.19  71.1  147.  3.60  3.22  17.8 0.438 0.406  3.69  2.81 #> 2  20.1  6.19  84.9  147.  3.60  3.22  17.8 0.438 0.406  3.69  2.81 #> 3  20.1  6.19  98.7  147.  3.60  3.22  17.8 0.438 0.406  3.69  2.81 #> 4  20.1  6.19 113.   147.  3.60  3.22  17.8 0.438 0.406  3.69  2.81 #> 5  20.1  6.19 126.   147.  3.60  3.22  17.8 0.438 0.406  3.69  2.81 #> 6  20.1  6.19 140.   147.  3.60  3.22  17.8 0.438 0.406  3.69  2.81  disp <- cbind(disp, predict(model, newdata = disp, interval = \"confidence\"))  ggplot(data = disp, aes(x = disp, y = fit)) +   geom_point(data = mtcars, aes(y = mpg)) +   geom_line() +   geom_line(aes(y = lwr), linetype = \"dotted\") +   geom_line(aes(y = upr), linetype = \"dotted\") +   ylab(\"mpg\")"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate New Data Values, Sequences and Frames","text":"install latest release version CRAN. install latest development version r-universe. install latest development version GitHub","code":"install.packages(\"newdata\") install.packages(\"newdata\", repos = c(\"https://poissonconsulting.r-universe.dev\", \"https://cloud.r-project.org\")) # install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch)) pak::pak(\"newdata\")"},{"path":"/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Generate New Data Values, Sequences and Frames","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Generate New Data Values, Sequences and Frames","text":"Please note newdata project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Data — new_data","title":"Generate New Data — new_data","text":"Generates new data frame (form tibble) variable held constant varying unique ordered sequence. possible combinations included.","code":""},{"path":"/reference/new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Data — new_data","text":"","code":"new_data(   data,   seq = character(0),   ref = list(),   obs_only = list(character(0)),   length_out = 30 )"},{"path":"/reference/new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Data — new_data","text":"data data frame generate new data . seq character vector variables data generate sequences named integer vector maximum length sequence name respective variable. ref named list vectors add new data frame. variables must seq need data. obs_only character vector specifying character, factor, ordered (factor) variables seq represented unique combinations list character vectors specifying groupings character, factor ordered (factor) variables seq represented unique combinations. TRUE set character, factor, ordered (factor) variables specified seq. length_out count indicating maximum length sequences types variables except character, factor ordered factors. maximum length variable specified seq length_out ignored.","code":""},{"path":"/reference/new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate New Data — new_data","text":"tibble new data.","code":""},{"path":"/reference/new_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Data — new_data","text":"new variables class original variables rows data frame unique. Consequently continuous variables integers discrete values attain specified length_out value possible values minimum maximum. ref can include variables data. vector unique sorted. factor named seq levels factor represented .e. length_out ignored. exception factor named obs_only case observed factor levels permitted sequences. worth noting ref can used specify sequences particular values well single references. useful extrapolating outside range data changes levels factor. element ref character vector corresponding column data frame, ref element assigned factor levels column data. useful choosing factor level without set correct levels.","code":""},{"path":[]},{"path":"/reference/new_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Data — new_data","text":"","code":"# an example data set data <- tibble::tibble(   vecint = c(1L, 3L),   vecreal = c(1, 3),   vecchar = c(\"b\", \"a\"),   vecdate = as.Date(\"2001-01-01\", \"2001-01-01\"))  # vary count while holding other values constant new_data(data, \"vecint\") #> # A tibble: 3 × 4 #>   vecint vecreal vecchar vecdate    #>    <int>   <dbl> <chr>   <date>     #> 1      1       2 a       2023-09-27 #> 2      2       2 a       2023-09-27 #> 3      3       2 a       2023-09-27 # vary continual new_data(data, \"vecreal\") #> # A tibble: 30 × 4 #>    vecint vecreal vecchar vecdate    #>     <int>   <dbl> <chr>   <date>     #>  1      2    1    a       2023-09-27 #>  2      2    1.07 a       2023-09-27 #>  3      2    1.14 a       2023-09-27 #>  4      2    1.21 a       2023-09-27 #>  5      2    1.28 a       2023-09-27 #>  6      2    1.34 a       2023-09-27 #>  7      2    1.41 a       2023-09-27 #>  8      2    1.48 a       2023-09-27 #>  9      2    1.55 a       2023-09-27 #> 10      2    1.62 a       2023-09-27 #> # ℹ 20 more rows new_data(data, c(\"vecchar\", \"vecint\")) #> # A tibble: 6 × 4 #>   vecint vecreal vecchar vecdate    #>    <int>   <dbl> <chr>   <date>     #> 1      1       2 a       2023-09-27 #> 2      2       2 a       2023-09-27 #> 3      3       2 a       2023-09-27 #> 4      1       2 b       2023-09-27 #> 5      2       2 b       2023-09-27 #> 6      3       2 b       2023-09-27"},{"path":"/reference/new_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Sequence — new_seq","title":"Generate New Sequence — new_seq","text":"Generate new sequence values vector, matrix array. sequence value used predict effect variable.","code":""},{"path":"/reference/new_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Sequence — new_seq","text":"","code":"new_seq(x, length_out = 30)  # S3 method for logical new_seq(x, length_out = 2)  # S3 method for integer new_seq(x, length_out = 30)  # S3 method for double new_seq(x, length_out = 30)  # S3 method for character new_seq(x, length_out = Inf)  # S3 method for factor new_seq(x, length_out = Inf)  # S3 method for ordered new_seq(x, length_out = Inf)  # S3 method for Date new_seq(x, length_out = 30)  # S3 method for POSIXct new_seq(x, length_out = 30)  # S3 method for hms new_seq(x, length_out = 30)"},{"path":"/reference/new_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Sequence — new_seq","text":"x object generate sequence . length_out maximum length sequence.","code":""},{"path":"/reference/new_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate New Sequence — new_seq","text":"vector class object.","code":""},{"path":"/reference/new_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Sequence — new_seq","text":"default sequence values objects class numeric 30 evenly space values across range data. Missing values always removed unless value object zero length. length sequence can varied using length_out argument can even 0. integer objects sequence unique integers character objects actual values sorted common followed actual value. factors factor levels order trailing levels dropped first. ordered factors intermediate levels dropped first. Date vectors unique dates; hms vectors. POSIXct vectors time zone preserved. logical objects longest possible sequence c(TRUE, FALSE).","code":""},{"path":"/reference/new_seq.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Generate New Sequence — new_seq","text":"new_seq(logical): Generate new sequence values logical objects new_seq(integer): Generate new sequence values integer objects new_seq(double): Generate new sequence values double objects new_seq(character): Generate new sequence values character objects new_seq(factor): Generate new sequence values factors new_seq(ordered): Generate new sequence values ordered factors new_seq(Date): Generate new sequence values Date vectors new_seq(POSIXct): Generate new sequence values POSIXct vectors new_seq(hms): Generate new sequence values hms vectors","code":""},{"path":[]},{"path":"/reference/new_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Sequence — new_seq","text":"","code":"# by default the sequence of values for objects of class numeric # is 30 evenly space values across the range of the data new_seq(c(1,4)) #>  [1] 1.000000 1.103448 1.206897 1.310345 1.413793 1.517241 1.620690 1.724138 #>  [9] 1.827586 1.931034 2.034483 2.137931 2.241379 2.344828 2.448276 2.551724 #> [17] 2.655172 2.758621 2.862069 2.965517 3.068966 3.172414 3.275862 3.379310 #> [25] 3.482759 3.586207 3.689655 3.793103 3.896552 4.000000 # missing values are always removed new_seq(c(1,4, NA)) #>  [1] 1.000000 1.103448 1.206897 1.310345 1.413793 1.517241 1.620690 1.724138 #>  [9] 1.827586 1.931034 2.034483 2.137931 2.241379 2.344828 2.448276 2.551724 #> [17] 2.655172 2.758621 2.862069 2.965517 3.068966 3.172414 3.275862 3.379310 #> [25] 3.482759 3.586207 3.689655 3.793103 3.896552 4.000000 # unless it's the only value new_seq(NA_real_) #> [1] NA # or the object is zero length new_seq(numeric()) #> [1] NA # the length of the sequence can be varied using the length_out argument new_seq(c(1,4), length_out = 1) #> [1] 1 new_seq(c(1,4), length_out = 2) #> [1] 1 4 new_seq(c(1,4), length_out = 3) #> [1] 1.0 2.5 4.0 # which can even be 0 new_seq(c(1,4), length_out = 0) #> numeric(0) # for integer objects the sequence is the unique integers new_seq(c(1L,4L)) #> [1] 1 2 3 4 new_seq(c(1L,100L)) #>  [1]   1   4   8  11  15  18  21  25  28  32  35  39  42  45  49  52  56  59  62 #> [20]  66  69  73  76  80  83  86  90  93  97 100 # for character objects it's the actual values sorted by # how common they are followed by their actual value new_seq(c(\"a\", \"c\", \"c\", \"b\", \"b\")) #> [1] \"b\" \"c\" \"a\" new_seq(c(\"a\", \"c\", \"c\", \"b\", \"b\"), length_out = 2) #> [1] \"b\" \"c\" # for factors its the factor levels in order new_seq(factor(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\"))) #> [1] b a g #> Levels: b a g # with the trailing levels dropped first new_seq(factor(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\")),  length_out = 2) #> [1] b a #> Levels: b a g # for ordered factors the intermediate levels are dropped first new_seq(ordered(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\")),  length_out = 2) #> [1] b g #> Levels: b < a < g # for Date vectors it's the unique dates new_seq(as.Date(c(\"2000-01-01\", \"2000-01-04\"))) #> [1] \"2000-01-01\" \"2000-01-02\" \"2000-01-03\" \"2000-01-04\" # same for hms vectors new_seq(hms::as_hms(c(\"00:00:01\", \"00:00:04\"))) #> 00:00:01 #> 00:00:02 #> 00:00:03 #> 00:00:04 # for POSIXct vectors the time zone is preserved new_seq(as.POSIXct(c(\"2000-01-01 00:00:01\", \"2000-01-01 00:00:04\"),   tz = \"PST8PDT\")) #> [1] \"2000-01-01 00:00:01 PST\" \"2000-01-01 00:00:02 PST\" #> [3] \"2000-01-01 00:00:03 PST\" \"2000-01-01 00:00:04 PST\" # for logical objects the longest possible sequence is `c(TRUE, FALSE)` new_seq(c(TRUE, TRUE, FALSE), length_out = 3) #> [1] FALSE  TRUE"},{"path":"/reference/new_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Reference Value — new_value","title":"Generate New Reference Value — new_value","text":"Generate new reference value vector, matrix array. reference value used control variable predictions.","code":""},{"path":"/reference/new_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Reference Value — new_value","text":"","code":"new_value(x)  # S3 method for default new_value(x)  # S3 method for logical new_value(x)  # S3 method for double new_value(x)  # S3 method for integer new_value(x)  # S3 method for character new_value(x)  # S3 method for factor new_value(x)  # S3 method for ordered new_value(x)  # S3 method for Date new_value(x)  # S3 method for POSIXct new_value(x)  # S3 method for hms new_value(x)"},{"path":"/reference/new_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Reference Value — new_value","text":"x object generate reference value .","code":""},{"path":"/reference/new_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate New Reference Value — new_value","text":"scalar class object.","code":""},{"path":"/reference/new_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Reference Value — new_value","text":"reference value objects (vectors, matrices arrays) class numeric mean. Missing values always removed unless value object zero length. integer objects rounded mean. character vectors common value minimum common values tie. factors first level factor levels preserved. ordered factors also first level. dates rounded mean. also rounded mean times. POSIXct vectors rounded mean time zone preserved. logical objects always FALSE natural reference value. finally default simply mean.","code":""},{"path":"/reference/new_value.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Generate New Reference Value — new_value","text":"new_value(default): Generate new reference value default objects new_value(logical): Generate new reference value logical objects new_value(double): Generate new reference value double objects new_value(integer): Generate new reference value integer objects new_value(character): Generate new reference value character objects new_value(factor): Generate new reference value factors new_value(ordered): Generate new reference value ordered factors new_value(Date): Generate new reference value Date vectors new_value(POSIXct): Generate new reference value POSIXct vectors new_value(hms): Generate new reference value hms vectors","code":""},{"path":[]},{"path":"/reference/new_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Reference Value — new_value","text":"","code":"# the reference value for objects of class numeric is the mean new_value(c(1,4)) #> [1] 2.5 # missing values are always removed new_value(c(1,4, NA)) #> [1] 2.5 # unless it's the only value new_value(NA_real_) #> [1] NA # or the object is zero length new_value(numeric()) #> [1] NA # for integer objects it's the rounded mean new_value(c(1L,4L)) #> [1] 2 # for character objects it's the most common value new_value(c(\"a\", \"b\", \"c\", \"c\")) #> [1] \"c\" # and the minimum of the most common values if a tie new_value(c(\"a\", \"b\", \"c\", \"c\", \"b\")) #> [1] \"b\" # for factors its the first level and the factor levels are preserved new_value(factor(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\"))) #> [1] b #> Levels: b a g # for ordered factors its also the first level new_value(ordered(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\"))) #> [1] b #> Levels: b < a < g # for dates it's the rounded mean new_value(as.Date(c(\"2000-01-01\", \"2000-01-04\"))) #> [1] \"2000-01-02\" # it's also the rounded mean for times new_value(hms::as_hms(c(\"00:00:01\", \"00:00:04\"))) #> 00:00:02 # for POSIXct vectors it's the rounded mean and the time zone is preserved new_value(as.POSIXct(c(\"2000-01-01 00:00:01\", \"2000-01-01 00:00:04\"),   tz = \"PST8PDT\")) #> [1] \"2000-01-01 00:00:03 PST\" # for logical objects it's always FALSE new_value(logical()) #> [1] FALSE # and finally by default its simply the mean new_value(complex(real = c(1, 4))) #> [1] 2.5+0i"},{"path":"/reference/newdata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"newdata: Generate New Data Values, Sequences and Frames — newdata-package","title":"newdata: Generate New Data Values, Sequences and Frames — newdata-package","text":"Generates new data values, sequences frames. new data column(s) interest vary across range remaining columns held constant reference value.","code":""},{"path":[]},{"path":"/reference/newdata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"newdata: Generate New Data Values, Sequences and Frames — newdata-package","text":"Maintainer: Joe Thorley joe@poissonconsulting.ca (ORCID) contributors: Poisson Consulting [funder, copyright holder]","code":""},{"path":"/news/index.html","id":"newdata-0009018","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9018","title":"newdata 0.0.0.9018","text":"Add new_value.ordered(). Replaced error() chk::err() Switch Rmarkdown roxygen check R >= 3.6 Removed dependency magrittr. Edited news file. Added new_value().hms Replace deprecated tibble::as_data_frame() tibble::as_tibble().","code":""},{"path":"/news/index.html","id":"newdata-0009017","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9017","title":"newdata 0.0.0.9017","text":"Edited news file.","code":""},{"path":"/news/index.html","id":"newdata-0009016","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9016","title":"newdata 0.0.0.9016","text":"previous version.","code":""},{"path":"/news/index.html","id":"newdata-0009015","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9015","title":"newdata 0.0.0.9015","text":"Added new_value().hms","code":""},{"path":"/news/index.html","id":"newdata-0009014","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9014","title":"newdata 0.0.0.9014","text":"Replace deprecated tibble::as_data_frame() tibble::as_tibble().","code":""}]
