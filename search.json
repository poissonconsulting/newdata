[{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to newdata","title":"Contributing to newdata","text":"outlines propose change newdata.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to newdata","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to newdata","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://poissonconsulting.github.io/newdata/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to newdata","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Begin commit merge messages - indicate user facing changes included NEWS.md. use fledge automatically generate NEWS.md file.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to newdata","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://poissonconsulting.github.io/newdata/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to newdata","text":"Please note newdata project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/newdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Poisson Consulting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonconsulting.github.io/newdata/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with newdata","title":"Getting help with newdata","text":"Thanks using newdata! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://poissonconsulting.github.io/newdata/SUPPORT.html","id":"make-sure-its-new","dir":"","previous_headings":"","what":"Make sure its new","title":"Getting help with newdata","text":"opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://poissonconsulting.github.io/newdata/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with newdata","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://poissonconsulting.github.io/newdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Thorley. Author, maintainer. Kirill Müller. Author. Ayla Pearson. Author. Nadine Hussein. Contributor. Maëlle Salmon. Contributor. . Funder, copyright holder.","code":""},{"path":"https://poissonconsulting.github.io/newdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorley J, Müller K, Pearson (2025). newdata: Generate New Data Frames Prediction. R package version 0.0.0.9022, https://github.com/poissonconsulting/newdata/, https://poissonconsulting.github.io/newdata/.","code":"@Manual{,   title = {newdata: Generate New Data Frames for Prediction},   author = {Joe Thorley and Kirill Müller and Ayla Pearson},   year = {2025},   note = {R package version 0.0.0.9022,     https://github.com/poissonconsulting/newdata/},   url = {https://poissonconsulting.github.io/newdata/}, }"},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Generate New Data Frames for Prediction","text":"newdata R package generate new data frames varying variables holding others constant. default, specified variables vary across range variables held constant reference value. user can specify length sequence, require observed values combinations used add new variables. Types, classes, factor levels time zones always preserved. Consider following observed ‘old’ data frame.","code":"library(newdata)  newdata::old_data #> # A tibble: 3 × 9 #>   lgl     int   dbl chr      fct     ord   dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr>    <fct>   <ord> <date>     <dttm>              <time> #> 1 TRUE      1   1   most     most    most  1970-01-02 1969-12-31 16:00:01 00'01\" #> 2 FALSE     4   4.5 most     most    most  1970-01-05 1969-12-31 16:00:04 00'04\" #> 3 NA        6   8.2 a rarity a rari… a ra… 1970-01-07 1969-12-31 16:00:06 00'06\""},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"length-of-sequences","dir":"","previous_headings":"Introduction","what":"Length of Sequences","title":"Generate New Data Frames for Prediction","text":"default variables set reference value. Specifying variable causes vary sequentially across range. user can specify length sequence.","code":"xnew_data(old_data) #> # A tibble: 1 × 9 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     3  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" xnew_data(old_data, int) #> # A tibble: 6 × 9 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     1  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     2  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 3 FALSE     3  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 4 FALSE     4  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 5 FALSE     5  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 6 FALSE     6  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" xnew_data(old_data, xnew_seq(int, length_out = 3)) #> # A tibble: 3 × 9 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     1  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     3  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 3 FALSE     6  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\""},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"observed-values-and-combinations","dir":"","previous_headings":"Introduction","what":"Observed Values and Combinations","title":"Generate New Data Frames for Prediction","text":"user can also indicate whether observed values used sequence. xobs_only() function can used filter unobserved values sequence generated. two variables specified combinations used. get observed combinations use xobs_only()","code":"xnew_data(old_data, xnew_seq(int, length_out = 3, obs_only = TRUE)) #> # A tibble: 3 × 9 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     1  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     4  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 3 FALSE     6  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" xnew_data(old_data, xobs_only(xnew_seq(int, length_out = 3))) #> # A tibble: 2 × 9 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     1  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     6  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" xnew_data(old_data, int, fct) #> # A tibble: 18 × 9 #>    lgl     int   dbl chr   fct      ord    dte        dtt                 hms    #>    <lgl> <int> <dbl> <chr> <fct>    <ord>  <date>     <dttm>              <time> #>  1 FALSE     1  4.57 most  not obs  a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  2 FALSE     1  4.57 most  a rarity a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  3 FALSE     1  4.57 most  most     a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  4 FALSE     2  4.57 most  not obs  a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  5 FALSE     2  4.57 most  a rarity a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  6 FALSE     2  4.57 most  most     a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  7 FALSE     3  4.57 most  not obs  a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  8 FALSE     3  4.57 most  a rarity a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  9 FALSE     3  4.57 most  most     a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 10 FALSE     4  4.57 most  not obs  a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 11 FALSE     4  4.57 most  a rarity a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 12 FALSE     4  4.57 most  most     a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 13 FALSE     5  4.57 most  not obs  a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 14 FALSE     5  4.57 most  a rarity a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 15 FALSE     5  4.57 most  most     a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 16 FALSE     6  4.57 most  not obs  a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 17 FALSE     6  4.57 most  a rarity a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 18 FALSE     6  4.57 most  most     a rar… 1970-01-04 1969-12-31 16:00:03 00'03\" xnew_data(old_data, xobs_only(int, fct)) #> # A tibble: 3 × 9 #>   lgl     int   dbl chr   fct      ord     dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>    <ord>   <date>     <dttm>              <time> #> 1 FALSE     1  4.57 most  most     a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     4  4.57 most  most     a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 3 FALSE     6  4.57 most  a rarity a rari… 1970-01-04 1969-12-31 16:00:03 00'03\""},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"add-new-variables","dir":"","previous_headings":"Introduction","what":"Add New Variables","title":"Generate New Data Frames for Prediction","text":"Adding new variable simple.","code":"xnew_data(old_data, extra = c(TRUE, FALSE)) #> # A tibble: 2 × 10 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     3  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     3  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> # ℹ 1 more variable: extra <lgl>"},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"casting-variables","dir":"","previous_headings":"Introduction","what":"Casting Variables","title":"Generate New Data Frames for Prediction","text":"Casting variables class original achieved follows.","code":"xnew_data(old_data, xcast(lgl = 1, int = 7, dbl = 10L, fct = \"a rarity\", hms = \"00:00:02\")) #> # A tibble: 1 × 9 #>   lgl     int   dbl chr   fct      ord     dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>    <ord>   <date>     <dttm>              <time> #> 1 TRUE      7    10 most  a rarity a rari… 1970-01-04 1969-12-31 16:00:03 00'02\""},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate New Data Frames for Prediction","text":"install latest release version CRAN. install latest development version r-universe. GitHub","code":"install.packages(\"newdata\") install.packages(\"newdata\", repos = c(\"https://poissonconsulting.r-universe.dev\", \"https://cloud.r-project.org\")) # install.packages(\"remotes\") remotes::install_github(\"poissonconsulting/newdata\")"},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Generate New Data Frames for Prediction","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"https://poissonconsulting.github.io/newdata/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Generate New Data Frames for Prediction","text":"Please note newdata project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Data  — new_data","title":"Generate New Data  — new_data","text":"Generates new data frame (form tibble) variable held constant varying unique ordered sequence. possible unique combinations included maximum 30 values variable.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Data  — new_data","text":"","code":"new_data(   data,   seq = character(0),   ref = list(),   obs_only = list(character(0)),   length_out = 30 )"},{"path":"https://poissonconsulting.github.io/newdata/reference/new_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Data  — new_data","text":"data data frame generate new data . seq character vector variables data generate sequences . ref named list reference values variables seq. Deprecated xnew_value(). obs_only list character vectors indicating sets variables allow observed combinations . TRUE obs_only set seq. Deprecated xobs_only(). length_out count indicating maximum length sequences types variables except logical, character, factor ordered factors. Deprecated xnew_seq().","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate New Data  — new_data","text":"tibble new data.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Data  — new_data","text":"arguments except seq deprecated function superseded xnew_data(). functionality new_data(data, c(\"\", \"b\")) effectively wrapper xnew_data(data, , b) allow string column names passed maintained backwards compatibility existing code.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/new_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Data  — new_data","text":"","code":"new_data(old_data, \"int\") #> # A tibble: 6 × 9 #>   lgl     int   dbl chr   fct     ord      dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr> <fct>   <ord>    <date>     <dttm>              <time> #> 1 FALSE     1  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 2 FALSE     2  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 3 FALSE     3  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 4 FALSE     4  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 5 FALSE     5  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" #> 6 FALSE     6  4.57 most  not obs a rarity 1970-01-04 1969-12-31 16:00:03 00'03\" new_data(old_data, \"dbl\") #> # A tibble: 30 × 9 #>    lgl     int   dbl chr   fct     ord     dte        dtt                 hms    #>    <lgl> <int> <dbl> <chr> <fct>   <ord>   <date>     <dttm>              <time> #>  1 FALSE     3  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  2 FALSE     3  1.25 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  3 FALSE     3  1.50 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  4 FALSE     3  1.74 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  5 FALSE     3  1.99 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  6 FALSE     3  2.24 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  7 FALSE     3  2.49 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  8 FALSE     3  2.74 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  9 FALSE     3  2.99 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 10 FALSE     3  3.23 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #> # ℹ 20 more rows new_data(old_data, c(\"int\", \"dbl\")) #> # A tibble: 180 × 9 #>    lgl     int   dbl chr   fct     ord     dte        dtt                 hms    #>    <lgl> <int> <dbl> <chr> <fct>   <ord>   <date>     <dttm>              <time> #>  1 FALSE     1  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  2 FALSE     2  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  3 FALSE     3  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  4 FALSE     4  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  5 FALSE     5  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  6 FALSE     6  1    most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  7 FALSE     1  1.25 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  8 FALSE     2  1.25 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #>  9 FALSE     3  1.25 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #> 10 FALSE     4  1.25 most  not obs a rari… 1970-01-04 1969-12-31 16:00:03 00'03\" #> # ℹ 170 more rows"},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Sequence — new_seq","title":"Generate New Sequence — new_seq","text":"Generate new sequence values. sequence values used predict effect variable.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Sequence — new_seq","text":"","code":"new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'logical' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'integer' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'double' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'character' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'factor' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'ordered' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'Date' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'POSIXct' new_seq(x, length_out = NULL, ..., obs_only = NULL)  # S3 method for class 'hms' new_seq(x, length_out = NULL, ..., obs_only = NULL)"},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Sequence — new_seq","text":"x object generate sequence . length_out maximum length sequence. ... dots future extensions must empty. obs_only flag specifying whether use observed values.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate New Sequence — new_seq","text":"vector class object.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Sequence — new_seq","text":"default sequence values objects class numeric 30 evenly space values across range data. Missing values always removed unless value object zero length. length sequence can varied using length_out argument gives reference value 1 can even 0. integer objects sequence unique integers. character objects actual values sorted common followed actual value. factors factor levels order trailing levels dropped first. ordered factors intermediate levels dropped first. Date vectors unique dates; hms vectors. POSIXct vectors time zone preserved. logical objects longest possible sequence c(TRUE, FALSE).","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Generate New Sequence — new_seq","text":"new_seq(logical): Generate new sequence values logical objects new_seq(integer): Generate new sequence values integer objects new_seq(double): Generate new sequence values double objects new_seq(character): Generate new sequence values character objects new_seq(factor): Generate new sequence values factors new_seq(ordered): Generate new sequence values ordered factors new_seq(Date): Generate new sequence values Date vectors new_seq(POSIXct): Generate new sequence values POSIXct vectors new_seq(hms): Generate new sequence values hms vectors","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/new_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Sequence — new_seq","text":"","code":"# by default the sequence of values for objects of class numeric # is 30 evenly space values across the range of the data new_seq(c(1, 4)) #>  [1] 1.000000 1.103448 1.206897 1.310345 1.413793 1.517241 1.620690 1.724138 #>  [9] 1.827586 1.931034 2.034483 2.137931 2.241379 2.344828 2.448276 2.551724 #> [17] 2.655172 2.758621 2.862069 2.965517 3.068966 3.172414 3.275862 3.379310 #> [25] 3.482759 3.586207 3.689655 3.793103 3.896552 4.000000 # missing values are always removed new_seq(c(1, 4, NA)) #>  [1] 1.000000 1.103448 1.206897 1.310345 1.413793 1.517241 1.620690 1.724138 #>  [9] 1.827586 1.931034 2.034483 2.137931 2.241379 2.344828 2.448276 2.551724 #> [17] 2.655172 2.758621 2.862069 2.965517 3.068966 3.172414 3.275862 3.379310 #> [25] 3.482759 3.586207 3.689655 3.793103 3.896552 4.000000 # unless it's the only value new_seq(NA_real_) #> [1] NA # or the object is zero length new_seq(numeric()) #> [1] NA # the length of the sequence can be varied using the length_out argument new_seq(c(1, 4), length_out = 3) #> [1] 1.0 2.5 4.0 new_seq(c(1, 4), length_out = 2) #> [1] 1 4 # which gives the reference value when 1 new_seq(c(1, 4), length_out = 1) #> [1] 2.5 # and can even be 0 new_seq(c(1, 4), length_out = 0) #> numeric(0) # for integer objects the sequence is the unique integers new_seq(c(1L, 4L)) #> [1] 1 2 3 4 new_seq(c(1L, 100L)) #>  [1]   1   4   7  11  14  18  21  24  28  31  35  38  41  45  48  52  55  59  62 #> [20]  65  69  72  76  79  82  86  89  93  96 100 # for character objects it's the actual values sorted by # how common they are followed by their actual value new_seq(c(\"a\", \"c\", \"c\", \"b\", \"b\")) #> [1] \"b\" \"c\" \"a\" new_seq(c(\"a\", \"c\", \"c\", \"b\", \"b\"), length_out = 2) #> [1] \"b\" \"c\" # for factors its the factor levels in order new_seq(factor(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\"))) #> [1] b a g #> Levels: b a g # with the trailing levels dropped first new_seq(factor(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\")),   length_out = 2 ) #> [1] b a #> Levels: b a g # for ordered factors the intermediate levels are dropped first new_seq(ordered(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\")),   length_out = 2 ) #> [1] b g #> Levels: b < a < g # for Date vectors it's the unique dates new_seq(as.Date(c(\"2000-01-01\", \"2000-01-04\"))) #> [1] \"2000-01-01\" \"2000-01-02\" \"2000-01-03\" \"2000-01-04\" # same for hms vectors new_seq(hms::as_hms(c(\"00:00:01\", \"00:00:04\"))) #> 00:00:01 #> 00:00:02 #> 00:00:03 #> 00:00:04 # for POSIXct vectors the time zone is preserved new_seq(as.POSIXct(c(\"2000-01-01 00:00:01\", \"2000-01-01 00:00:04\"),   tz = \"PST8PDT\" )) #> [1] \"2000-01-01 00:00:01 PST\" \"2000-01-01 00:00:02 PST\" #> [3] \"2000-01-01 00:00:03 PST\" \"2000-01-01 00:00:04 PST\" # for logical objects the longest possible sequence is `c(TRUE, FALSE)` new_seq(c(TRUE, TRUE, FALSE), length_out = 3) #> [1] FALSE  TRUE"},{"path":"https://poissonconsulting.github.io/newdata/reference/new_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Reference Value — new_value","title":"Generate New Reference Value — new_value","text":"Generate new reference value vector.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Reference Value — new_value","text":"","code":"new_value(x, ..., obs_only = NULL)"},{"path":"https://poissonconsulting.github.io/newdata/reference/new_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Reference Value — new_value","text":"x object generate reference value . ... dots future extensions must empty. obs_only flag specifying whether use observed values.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate New Reference Value — new_value","text":"scalar class object.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/new_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Reference Value — new_value","text":"default reference value double vectors mean, unless obs_only = TRUE, case median unique values. integer vectors floored mean unless obs_only = TRUE, case also median unique values. character vectors minimum common values factors first level. Ordered factors, Dates, times (hms), POSIXct logical vectors treated like integers. factor levels time zone preserved.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/new_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Reference Value — new_value","text":"","code":"# the reference value for objects of class numeric is the mean new_value(c(1, 4)) #> [1] 2.5 # unless obs_only = TRUE, in which case its the median of the unique values new_value(c(1, 4), obs_only = TRUE) #> [1] 1  # for integer objects it's the floored mean new_value(c(1L, 4L)) #> [1] 2  # for character objects it's the minimum of the most common values new_value(c(\"a\", \"b\", \"c\", \"c\", \"b\")) #> [1] \"b\"  # for factors its the first level and the factor levels are preserved new_value(factor(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\"))) #> [1] b #> Levels: b a g  # other classes are treated like integers new_value(ordered(c(\"a\", \"b\", \"c\", \"c\"), levels = c(\"b\", \"a\", \"g\"))) #> [1] a #> Levels: b < a < g new_value(as.Date(c(\"2000-01-01\", \"2000-01-04\"))) #> [1] \"2000-01-02\" new_value(hms::as_hms(c(\"00:00:01\", \"00:00:04\"))) #> 00:00:02 new_value(as.POSIXct(c(\"2000-01-01 00:00:01\", \"2000-01-01 00:00:04\")),   tzone = \"PST8PDT\" ) #> [1] \"2000-01-01 00:00:02 UTC\" new_value(c(TRUE, FALSE, TRUE)) #> [1] FALSE"},{"path":"https://poissonconsulting.github.io/newdata/reference/newdata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"newdata: Generate New Data Frames for Prediction — newdata-package","title":"newdata: Generate New Data Frames for Prediction — newdata-package","text":"Generates new data frames predictive purposes. default, specified variables vary across range variables held constant default reference value. Types, classes, factor levels time zones always preserved. user can specify length sequence, require observed values combinations used add new variables.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/newdata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"newdata: Generate New Data Frames for Prediction — newdata-package","text":"Maintainer: Joe Thorley joe@poissonconsulting.ca (ORCID) Authors: Kirill Müller kirill@cynkra.com (ORCID) Ayla Pearson ayla@poissonconsulting.ca (ORCID) contributors: Nadine Hussein nadine@poissonconsulting.ca (ORCID) [contributor] Maëlle Salmon maelle@cynkra.com (ORCID) [contributor] Poisson Consulting [funder, copyright holder]","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/old_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data — old_data","title":"Example Data — old_data","text":"example tibble example 'old' data.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/old_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data — old_data","text":"","code":"old_data"},{"path":"https://poissonconsulting.github.io/newdata/reference/old_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data — old_data","text":"object class tbl_df (inherits tbl, data.frame) 3 rows 9 columns.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/old_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example Data — old_data","text":"lgl logical vector. int integer vector. dbl double vector. chr character vector. fct factor. ord ordered factor. dte Date vector. dtt POSIXct vector. hms hms vector.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/old_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Data — old_data","text":"","code":"old_data #> # A tibble: 3 × 9 #>   lgl     int   dbl chr      fct     ord   dte        dtt                 hms    #>   <lgl> <int> <dbl> <chr>    <fct>   <ord> <date>     <dttm>              <time> #> 1 TRUE      1   1   most     most    most  1970-01-02 1969-12-31 16:00:01 00'01\" #> 2 FALSE     4   4.5 most     most    most  1970-01-05 1969-12-31 16:00:04 00'04\" #> 3 NA        6   8.2 a rarity a rari… a ra… 1970-01-07 1969-12-31 16:00:06 00'06\""},{"path":"https://poissonconsulting.github.io/newdata/reference/xcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast New Values for xnew_data() — xcast","title":"Cast New Values for xnew_data() — xcast","text":"Casts sequence values class original vector.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast New Values for xnew_data() — xcast","text":"","code":"xcast(..., .data = xnew_data_env$data)"},{"path":"https://poissonconsulting.github.io/newdata/reference/xcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast New Values for xnew_data() — xcast","text":"... TBD .data Normally defined xnew_data(), users must pass data frame tibble using function directly.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xcast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cast New Values for xnew_data() — xcast","text":"xnew_seq() wrapper function vctrs::vec_cast() use xnew_data() avoid repeating column name.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/xcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast New Values for xnew_data() — xcast","text":"","code":"data <- tibble::tibble(   period = factor(c(\"before\", \"before\", \"after\", \"after\"),     levels = c(\"before\", \"after\")   ),   annual = factor(c(1, 3, 5, 8), levels = c(1, 3, 5, 8)) )  xnew_data(data, xcast(period = \"before\")) #> # A tibble: 1 × 2 #>   period annual #>   <fct>  <fct>  #> 1 before 1      xnew_data(data, xcast(period = \"before\", annual = c(\"1\", \"3\"))) #> # A tibble: 2 × 2 #>   period annual #>   <fct>  <fct>  #> 1 before 1      #> 2 before 3"},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Data by Expansion — xnew_data","title":"Generate New Data by Expansion — xnew_data","text":"Generates new data frame (form tibble)","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Data by Expansion — xnew_data","text":"","code":"xnew_data(.data, ..., .length_out = NULL)"},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Data by Expansion — xnew_data","text":".data data frame generate new data . ... list variables generate sequences . .length_out NULL count specifying maximum length sequences.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Data by Expansion — xnew_data","text":"default, specified variables vary across range variables held constant reference value. Types, classes, factor levels time zones always preserved. user can specify length sequence, require observed values combinations used add new variables.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Data by Expansion — xnew_data","text":"","code":"data <- tibble::tibble(   period = factor(c(\"before\", \"before\", \"after\", \"after\"),     levels = c(\"before\", \"after\")   ),   count = c(0L, 1L, 5L, 4L),   annual = factor(c(2, 3, 5, 8), levels = c(1, 2, 3, 5, 8)) )  # By default all other variables are held constant at their reference value. xnew_data(data) #> # A tibble: 1 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 1       # Specifying a variable causes it to vary across its range. xnew_data(data, annual) #> # A tibble: 5 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 1      #> 2 before     2 2      #> 3 before     2 3      #> 4 before     2 5      #> 5 before     2 8       # The user can specify the length of a sequence. xnew_data(data, xnew_seq(annual, length_out = 3)) #> # A tibble: 3 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 1      #> 2 before     2 2      #> 3 before     2 3       # And only allow observed values. xnew_data(data, xnew_seq(annual, length_out = 3, obs_only = TRUE)) #> # A tibble: 3 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 2      #> 2 before     2 3      #> 3 before     2 5       # With multiple variables all combinations are produced xnew_data(data, period, xnew_seq(annual, length_out = 3, obs_only = TRUE)) #> # A tibble: 6 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 2      #> 2 before     2 3      #> 3 before     2 5      #> 4 after      2 2      #> 5 after      2 3      #> 6 after      2 5       # To only preserve observed combinations use xnew_data(data, xobs_only(period, annual)) #> # A tibble: 4 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 2      #> 2 before     2 3      #> 3 after      2 5      #> 4 after      2 8       # And to cast the values use xnew_data(data, xcast(annual = \"3\")) #> # A tibble: 1 × 3 #>   period count annual #>   <fct>  <int> <fct>  #> 1 before     2 3"},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Sequence for xnew_data() — xnew_seq","title":"Generate New Sequence for xnew_data() — xnew_seq","text":"Generate new sequence values vector.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Sequence for xnew_data() — xnew_seq","text":"","code":"xnew_seq(x, ...)"},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Sequence for xnew_data() — xnew_seq","text":"x object generate sequence . ... Additional arguments passed new_seq().","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_seq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Sequence for xnew_data() — xnew_seq","text":"xnew_seq() wrapper function new_seq() use xnew_data() avoid repeating column name.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Sequence for xnew_data() — xnew_seq","text":"","code":"data <- tibble::tibble(   a = c(1L, 3L, 4L),   b = c(4, 4.5, 6),   d = c(\"a\", \"b\", \"c\") )  xnew_data(data, a, b = new_seq(b, length_out = 3), xnew_seq(d, length_out = 2)) #> # A tibble: 24 × 3 #>        a     b d     #>    <int> <dbl> <chr> #>  1     1     4 a     #>  2     1     4 b     #>  3     1     5 a     #>  4     1     5 b     #>  5     1     6 a     #>  6     1     6 b     #>  7     2     4 a     #>  8     2     4 b     #>  9     2     5 a     #> 10     2     5 b     #> # ℹ 14 more rows"},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate New Reference Value for xnew_data() — xnew_value","title":"Generate New Reference Value for xnew_data() — xnew_value","text":"Generate new reference value vector.","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate New Reference Value for xnew_data() — xnew_value","text":"","code":"xnew_value(x, ...)"},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate New Reference Value for xnew_data() — xnew_value","text":"x object generate reference value . ... Additional arguments passed new_value().","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate New Reference Value for xnew_data() — xnew_value","text":"xnew_value() wrapper function new_value() use xnew_data() avoid repeating column name.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/xnew_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate New Reference Value for xnew_data() — xnew_value","text":"","code":"data <- tibble::tibble(   a = c(1L, 3L, 4L),   b = c(4, 4.5, 6),   d = c(\"a\", \"b\", \"c\") )  xnew_data(data, a, b = new_value(b), xnew_value(d)) #> # A tibble: 4 × 3 #>       a     b d     #>   <int> <dbl> <chr> #> 1     1  4.83 a     #> 2     2  4.83 a     #> 3     3  4.83 a     #> 4     4  4.83 a"},{"path":"https://poissonconsulting.github.io/newdata/reference/xobs_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Observed Combinations Only — xobs_only","title":"Generate Observed Combinations Only — xobs_only","text":"Generate Observed Combinations ","code":""},{"path":"https://poissonconsulting.github.io/newdata/reference/xobs_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Observed Combinations Only — xobs_only","text":"","code":"xobs_only(..., .length_out = NULL, .data = xnew_data_env$data)"},{"path":"https://poissonconsulting.github.io/newdata/reference/xobs_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Observed Combinations Only — xobs_only","text":"... One variables generate combinations . .length_out count override default length sequences. .data Normally defined xnew_data(), users must pass data frame tibble using function directly.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/reference/xobs_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Observed Combinations Only — xobs_only","text":"","code":"data <- tibble::tibble(   period = factor(c(\"before\", \"before\", \"after\", \"after\"),     levels = c(\"before\", \"after\")   ),   annual = factor(c(1, 3, 5, 8), levels = c(1, 3, 5, 8)) ) xnew_data(data, period, annual) #> # A tibble: 8 × 2 #>   period annual #>   <fct>  <fct>  #> 1 before 1      #> 2 before 3      #> 3 before 5      #> 4 before 8      #> 5 after  1      #> 6 after  3      #> 7 after  5      #> 8 after  8      xnew_data(data, xobs_only(period, annual)) #> # A tibble: 4 × 2 #>   period annual #>   <fct>  <fct>  #> 1 before 1      #> 2 before 3      #> 3 after  5      #> 4 after  8      xnew_data(data, xobs_only(period, xnew_seq(annual, length_out = 3))) #> # A tibble: 3 × 2 #>   period annual #>   <fct>  <fct>  #> 1 before 1      #> 2 before 3      #> 3 after  5"},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"continuous-integration-0-0-0-9022","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"newdata 0.0.0.9022","text":"Sync workflows (#36).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"chore-0-0-0-9021","dir":"Changelog","previous_headings":"","what":"Chore","title":"newdata 0.0.0.9021","text":"Auto-update GitHub Actions (#24).","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"continuous-integration-0-0-0-9021","dir":"Changelog","previous_headings":"","what":"Continuous integration","title":"newdata 0.0.0.9021","text":"Use Ubuntu 24.04 styler PR (#33). Correctly detect branch protection (#30). Use stable pak (#29). Latest changes (#27). Use pkgdown branch (#26). Install via R CMD INSTALL ., pak (#25). Install local package pkgdown builds. Improve support protected branches fledge. Improve support protected branches, without fledge. Sync latest developments. Fix edge case suggested packages. Use workflows actions-sync. Sync rcc workflows. Sync codecov workflows.","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"draft-0-0-0-9021","dir":"Changelog","previous_headings":"","what":"Draft","title":"newdata 0.0.0.9021","text":"Xcoerce() (#18).","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"uncategorized-0-0-0-9021","dir":"Changelog","previous_headings":"","what":"Uncategorized","title":"newdata 0.0.0.9021","text":"Merge pull request #23 poissonconsulting/f-snapshots. Merge pull request #21 poissonconsulting/upkeep-2024-08. Soft-deprecate arguments new_data() except data seq.","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"newdata-0009020","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9020","title":"newdata 0.0.0.9020","text":"previous version.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"chore-0-0-0-9019","dir":"Changelog","previous_headings":"","what":"Chore","title":"newdata 0.0.0.9019","text":"Use standalone purrr (#14).","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"uncategorized-0-0-0-9019","dir":"Changelog","previous_headings":"","what":"Uncategorized","title":"newdata 0.0.0.9019","text":"Fix bug new_data() returning levels factor. Update authors. Adding obs_only = FALSE argument new_seq. Merge pull request #13 poissonconsulting/f-new-style-fun. Set character vectors default. Drop new_seq default. Character new value now uses common min value. Ordered behaves like integer. Factor character now takes first last. New seq character now length argument. New_value.Date() returns integer date. Switch testthat 3. Adding examples new_seq() new_value(). Added examples new_value().","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"newdata-0009018","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9018","title":"newdata 0.0.0.9018","text":"Add new_value.ordered(). Replaced error() chk::err() Switch Rmarkdown roxygen check R >= 3.6 Removed dependency magrittr. Edited news file. Added new_value().hms Replace deprecated tibble::as_data_frame() tibble::as_tibble().","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"newdata-0009017","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9017","title":"newdata 0.0.0.9017","text":"Edited news file.","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"newdata-0009016","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9016","title":"newdata 0.0.0.9016","text":"previous version.","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"newdata-0009015","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9015","title":"newdata 0.0.0.9015","text":"Added new_value().hms","code":""},{"path":"https://poissonconsulting.github.io/newdata/news/index.html","id":"newdata-0009014","dir":"Changelog","previous_headings":"","what":"newdata 0.0.0.9014","title":"newdata 0.0.0.9014","text":"Replace deprecated tibble::as_data_frame() tibble::as_tibble().","code":""}]
